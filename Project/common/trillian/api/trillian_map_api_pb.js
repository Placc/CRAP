/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require("google-protobuf");
var goog = jspb;
var global = Function("return this")();

var trillian_pb = require("./trillian_pb.js");
goog.exportSymbol("proto.trillian.GetMapLeavesByRevisionRequest", null, global);
goog.exportSymbol("proto.trillian.GetMapLeavesRequest", null, global);
goog.exportSymbol("proto.trillian.GetMapLeavesResponse", null, global);
goog.exportSymbol(
  "proto.trillian.GetSignedMapRootByRevisionRequest",
  null,
  global
);
goog.exportSymbol("proto.trillian.GetSignedMapRootRequest", null, global);
goog.exportSymbol("proto.trillian.GetSignedMapRootResponse", null, global);
goog.exportSymbol("proto.trillian.InitMapRequest", null, global);
goog.exportSymbol("proto.trillian.InitMapResponse", null, global);
goog.exportSymbol("proto.trillian.MapLeaf", null, global);
goog.exportSymbol("proto.trillian.MapLeafInclusion", null, global);
goog.exportSymbol("proto.trillian.SetMapLeavesRequest", null, global);
goog.exportSymbol("proto.trillian.SetMapLeavesResponse", null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trillian.MapLeaf = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trillian.MapLeaf, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.trillian.MapLeaf.displayName = "proto.trillian.MapLeaf";
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.trillian.MapLeaf.prototype.toObject = function(opt_includeInstance) {
    return proto.trillian.MapLeaf.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.trillian.MapLeaf} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.trillian.MapLeaf.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        index: msg.getIndex_asB64(),
        leafHash: msg.getLeafHash_asB64(),
        leafValue: msg.getLeafValue_asB64(),
        extraData: msg.getExtraData_asB64()
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trillian.MapLeaf}
 */
proto.trillian.MapLeaf.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trillian.MapLeaf();
  return proto.trillian.MapLeaf.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trillian.MapLeaf} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trillian.MapLeaf}
 */
proto.trillian.MapLeaf.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.setIndex(value);
        break;
      case 2:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.setLeafHash(value);
        break;
      case 3:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.setLeafValue(value);
        break;
      case 4:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.setExtraData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trillian.MapLeaf.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trillian.MapLeaf.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trillian.MapLeaf} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trillian.MapLeaf.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex_asU8();
  if (f.length > 0) {
    writer.writeBytes(1, f);
  }
  f = message.getLeafHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(2, f);
  }
  f = message.getLeafValue_asU8();
  if (f.length > 0) {
    writer.writeBytes(3, f);
  }
  f = message.getExtraData_asU8();
  if (f.length > 0) {
    writer.writeBytes(4, f);
  }
};

/**
 * optional bytes index = 1;
 * @return {!(string|Uint8Array)}
 */
proto.trillian.MapLeaf.prototype.getIndex = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(
    this,
    1,
    ""
  ));
};

/**
 * optional bytes index = 1;
 * This is a type-conversion wrapper around `getIndex()`
 * @return {string}
 */
proto.trillian.MapLeaf.prototype.getIndex_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(this.getIndex()));
};

/**
 * optional bytes index = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getIndex()`
 * @return {!Uint8Array}
 */
proto.trillian.MapLeaf.prototype.getIndex_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getIndex()));
};

/** @param {!(string|Uint8Array)} value */
proto.trillian.MapLeaf.prototype.setIndex = function(value) {
  jspb.Message.setField(this, 1, value);
};

/**
 * optional bytes leaf_hash = 2;
 * @return {!(string|Uint8Array)}
 */
proto.trillian.MapLeaf.prototype.getLeafHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(
    this,
    2,
    ""
  ));
};

/**
 * optional bytes leaf_hash = 2;
 * This is a type-conversion wrapper around `getLeafHash()`
 * @return {string}
 */
proto.trillian.MapLeaf.prototype.getLeafHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(this.getLeafHash()));
};

/**
 * optional bytes leaf_hash = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getLeafHash()`
 * @return {!Uint8Array}
 */
proto.trillian.MapLeaf.prototype.getLeafHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
    this.getLeafHash()
  ));
};

/** @param {!(string|Uint8Array)} value */
proto.trillian.MapLeaf.prototype.setLeafHash = function(value) {
  jspb.Message.setField(this, 2, value);
};

/**
 * optional bytes leaf_value = 3;
 * @return {!(string|Uint8Array)}
 */
proto.trillian.MapLeaf.prototype.getLeafValue = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(
    this,
    3,
    ""
  ));
};

/**
 * optional bytes leaf_value = 3;
 * This is a type-conversion wrapper around `getLeafValue()`
 * @return {string}
 */
proto.trillian.MapLeaf.prototype.getLeafValue_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(this.getLeafValue()));
};

/**
 * optional bytes leaf_value = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getLeafValue()`
 * @return {!Uint8Array}
 */
proto.trillian.MapLeaf.prototype.getLeafValue_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
    this.getLeafValue()
  ));
};

/** @param {!(string|Uint8Array)} value */
proto.trillian.MapLeaf.prototype.setLeafValue = function(value) {
  jspb.Message.setField(this, 3, value);
};

/**
 * optional bytes extra_data = 4;
 * @return {!(string|Uint8Array)}
 */
proto.trillian.MapLeaf.prototype.getExtraData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(
    this,
    4,
    ""
  ));
};

/**
 * optional bytes extra_data = 4;
 * This is a type-conversion wrapper around `getExtraData()`
 * @return {string}
 */
proto.trillian.MapLeaf.prototype.getExtraData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(this.getExtraData()));
};

/**
 * optional bytes extra_data = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getExtraData()`
 * @return {!Uint8Array}
 */
proto.trillian.MapLeaf.prototype.getExtraData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
    this.getExtraData()
  ));
};

/** @param {!(string|Uint8Array)} value */
proto.trillian.MapLeaf.prototype.setExtraData = function(value) {
  jspb.Message.setField(this, 4, value);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trillian.MapLeafInclusion = function(opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.trillian.MapLeafInclusion.repeatedFields_,
    null
  );
};
goog.inherits(proto.trillian.MapLeafInclusion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.trillian.MapLeafInclusion.displayName =
    "proto.trillian.MapLeafInclusion";
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.trillian.MapLeafInclusion.repeatedFields_ = [2];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.trillian.MapLeafInclusion.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.trillian.MapLeafInclusion.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.trillian.MapLeafInclusion} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.trillian.MapLeafInclusion.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        leaf:
          (f = msg.getLeaf()) &&
          proto.trillian.MapLeaf.toObject(includeInstance, f),
        inclusionList: msg.getInclusionList_asB64()
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trillian.MapLeafInclusion}
 */
proto.trillian.MapLeafInclusion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trillian.MapLeafInclusion();
  return proto.trillian.MapLeafInclusion.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trillian.MapLeafInclusion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trillian.MapLeafInclusion}
 */
proto.trillian.MapLeafInclusion.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.trillian.MapLeaf();
        reader.readMessage(
          value,
          proto.trillian.MapLeaf.deserializeBinaryFromReader
        );
        msg.setLeaf(value);
        break;
      case 2:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.addInclusion(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trillian.MapLeafInclusion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trillian.MapLeafInclusion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trillian.MapLeafInclusion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trillian.MapLeafInclusion.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getLeaf();
  if (f != null) {
    writer.writeMessage(1, f, proto.trillian.MapLeaf.serializeBinaryToWriter);
  }
  f = message.getInclusionList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(2, f);
  }
};

/**
 * optional MapLeaf leaf = 1;
 * @return {?proto.trillian.MapLeaf}
 */
proto.trillian.MapLeafInclusion.prototype.getLeaf = function() {
  return /** @type{?proto.trillian.MapLeaf} */ (jspb.Message.getWrapperField(
    this,
    proto.trillian.MapLeaf,
    1
  ));
};

/** @param {?proto.trillian.MapLeaf|undefined} value */
proto.trillian.MapLeafInclusion.prototype.setLeaf = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};

proto.trillian.MapLeafInclusion.prototype.clearLeaf = function() {
  this.setLeaf(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.trillian.MapLeafInclusion.prototype.hasLeaf = function() {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * repeated bytes inclusion = 2;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.trillian.MapLeafInclusion.prototype.getInclusionList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(
    this,
    2
  ));
};

/**
 * repeated bytes inclusion = 2;
 * This is a type-conversion wrapper around `getInclusionList()`
 * @return {!Array.<string>}
 */
proto.trillian.MapLeafInclusion.prototype.getInclusionList_asB64 = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.bytesListAsB64(
    this.getInclusionList()
  ));
};

/**
 * repeated bytes inclusion = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInclusionList()`
 * @return {!Array.<!Uint8Array>}
 */
proto.trillian.MapLeafInclusion.prototype.getInclusionList_asU8 = function() {
  return /** @type {!Array.<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
    this.getInclusionList()
  ));
};

/** @param {!(Array<!Uint8Array>|Array<string>)} value */
proto.trillian.MapLeafInclusion.prototype.setInclusionList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};

/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 */
proto.trillian.MapLeafInclusion.prototype.addInclusion = function(
  value,
  opt_index
) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};

proto.trillian.MapLeafInclusion.prototype.clearInclusionList = function() {
  this.setInclusionList([]);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trillian.GetMapLeavesRequest = function(opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.trillian.GetMapLeavesRequest.repeatedFields_,
    null
  );
};
goog.inherits(proto.trillian.GetMapLeavesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.trillian.GetMapLeavesRequest.displayName =
    "proto.trillian.GetMapLeavesRequest";
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.trillian.GetMapLeavesRequest.repeatedFields_ = [2];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.trillian.GetMapLeavesRequest.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.trillian.GetMapLeavesRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.trillian.GetMapLeavesRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.trillian.GetMapLeavesRequest.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        mapId: jspb.Message.getFieldWithDefault(msg, 1, "0"),
        indexList: msg.getIndexList_asB64()
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trillian.GetMapLeavesRequest}
 */
proto.trillian.GetMapLeavesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trillian.GetMapLeavesRequest();
  return proto.trillian.GetMapLeavesRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trillian.GetMapLeavesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trillian.GetMapLeavesRequest}
 */
proto.trillian.GetMapLeavesRequest.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readInt64String());
        msg.setMapId(value);
        break;
      case 2:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.addIndex(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trillian.GetMapLeavesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trillian.GetMapLeavesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trillian.GetMapLeavesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trillian.GetMapLeavesRequest.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getMapId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(1, f);
  }
  f = message.getIndexList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(2, f);
  }
};

/**
 * optional int64 map_id = 1;
 * @return {string}
 */
proto.trillian.GetMapLeavesRequest.prototype.getMapId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};

/** @param {string} value */
proto.trillian.GetMapLeavesRequest.prototype.setMapId = function(value) {
  jspb.Message.setField(this, 1, value);
};

/**
 * repeated bytes index = 2;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.trillian.GetMapLeavesRequest.prototype.getIndexList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(
    this,
    2
  ));
};

/**
 * repeated bytes index = 2;
 * This is a type-conversion wrapper around `getIndexList()`
 * @return {!Array.<string>}
 */
proto.trillian.GetMapLeavesRequest.prototype.getIndexList_asB64 = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.bytesListAsB64(
    this.getIndexList()
  ));
};

/**
 * repeated bytes index = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getIndexList()`
 * @return {!Array.<!Uint8Array>}
 */
proto.trillian.GetMapLeavesRequest.prototype.getIndexList_asU8 = function() {
  return /** @type {!Array.<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
    this.getIndexList()
  ));
};

/** @param {!(Array<!Uint8Array>|Array<string>)} value */
proto.trillian.GetMapLeavesRequest.prototype.setIndexList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};

/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 */
proto.trillian.GetMapLeavesRequest.prototype.addIndex = function(
  value,
  opt_index
) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};

proto.trillian.GetMapLeavesRequest.prototype.clearIndexList = function() {
  this.setIndexList([]);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trillian.GetMapLeavesByRevisionRequest = function(opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.trillian.GetMapLeavesByRevisionRequest.repeatedFields_,
    null
  );
};
goog.inherits(proto.trillian.GetMapLeavesByRevisionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.trillian.GetMapLeavesByRevisionRequest.displayName =
    "proto.trillian.GetMapLeavesByRevisionRequest";
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.trillian.GetMapLeavesByRevisionRequest.repeatedFields_ = [2];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.trillian.GetMapLeavesByRevisionRequest.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.trillian.GetMapLeavesByRevisionRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.trillian.GetMapLeavesByRevisionRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.trillian.GetMapLeavesByRevisionRequest.toObject = function(
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        mapId: jspb.Message.getFieldWithDefault(msg, 1, "0"),
        indexList: msg.getIndexList_asB64(),
        revision: jspb.Message.getFieldWithDefault(msg, 3, "0")
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trillian.GetMapLeavesByRevisionRequest}
 */
proto.trillian.GetMapLeavesByRevisionRequest.deserializeBinary = function(
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trillian.GetMapLeavesByRevisionRequest();
  return proto.trillian.GetMapLeavesByRevisionRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trillian.GetMapLeavesByRevisionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trillian.GetMapLeavesByRevisionRequest}
 */
proto.trillian.GetMapLeavesByRevisionRequest.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readInt64String());
        msg.setMapId(value);
        break;
      case 2:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.addIndex(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readInt64String());
        msg.setRevision(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trillian.GetMapLeavesByRevisionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trillian.GetMapLeavesByRevisionRequest.serializeBinaryToWriter(
    this,
    writer
  );
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trillian.GetMapLeavesByRevisionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trillian.GetMapLeavesByRevisionRequest.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getMapId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(1, f);
  }
  f = message.getIndexList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(2, f);
  }
  f = message.getRevision();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(3, f);
  }
};

/**
 * optional int64 map_id = 1;
 * @return {string}
 */
proto.trillian.GetMapLeavesByRevisionRequest.prototype.getMapId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};

/** @param {string} value */
proto.trillian.GetMapLeavesByRevisionRequest.prototype.setMapId = function(
  value
) {
  jspb.Message.setField(this, 1, value);
};

/**
 * repeated bytes index = 2;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.trillian.GetMapLeavesByRevisionRequest.prototype.getIndexList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(
    this,
    2
  ));
};

/**
 * repeated bytes index = 2;
 * This is a type-conversion wrapper around `getIndexList()`
 * @return {!Array.<string>}
 */
proto.trillian.GetMapLeavesByRevisionRequest.prototype.getIndexList_asB64 = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.bytesListAsB64(
    this.getIndexList()
  ));
};

/**
 * repeated bytes index = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getIndexList()`
 * @return {!Array.<!Uint8Array>}
 */
proto.trillian.GetMapLeavesByRevisionRequest.prototype.getIndexList_asU8 = function() {
  return /** @type {!Array.<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
    this.getIndexList()
  ));
};

/** @param {!(Array<!Uint8Array>|Array<string>)} value */
proto.trillian.GetMapLeavesByRevisionRequest.prototype.setIndexList = function(
  value
) {
  jspb.Message.setField(this, 2, value || []);
};

/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 */
proto.trillian.GetMapLeavesByRevisionRequest.prototype.addIndex = function(
  value,
  opt_index
) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};

proto.trillian.GetMapLeavesByRevisionRequest.prototype.clearIndexList = function() {
  this.setIndexList([]);
};

/**
 * optional int64 revision = 3;
 * @return {string}
 */
proto.trillian.GetMapLeavesByRevisionRequest.prototype.getRevision = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};

/** @param {string} value */
proto.trillian.GetMapLeavesByRevisionRequest.prototype.setRevision = function(
  value
) {
  jspb.Message.setField(this, 3, value);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trillian.GetMapLeavesResponse = function(opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.trillian.GetMapLeavesResponse.repeatedFields_,
    null
  );
};
goog.inherits(proto.trillian.GetMapLeavesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.trillian.GetMapLeavesResponse.displayName =
    "proto.trillian.GetMapLeavesResponse";
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.trillian.GetMapLeavesResponse.repeatedFields_ = [2];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.trillian.GetMapLeavesResponse.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.trillian.GetMapLeavesResponse.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.trillian.GetMapLeavesResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.trillian.GetMapLeavesResponse.toObject = function(
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        mapLeafInclusionList: jspb.Message.toObjectList(
          msg.getMapLeafInclusionList(),
          proto.trillian.MapLeafInclusion.toObject,
          includeInstance
        ),
        mapRoot:
          (f = msg.getMapRoot()) &&
          trillian_pb.SignedMapRoot.toObject(includeInstance, f)
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trillian.GetMapLeavesResponse}
 */
proto.trillian.GetMapLeavesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trillian.GetMapLeavesResponse();
  return proto.trillian.GetMapLeavesResponse.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trillian.GetMapLeavesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trillian.GetMapLeavesResponse}
 */
proto.trillian.GetMapLeavesResponse.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 2:
        var value = new proto.trillian.MapLeafInclusion();
        reader.readMessage(
          value,
          proto.trillian.MapLeafInclusion.deserializeBinaryFromReader
        );
        msg.addMapLeafInclusion(value);
        break;
      case 3:
        var value = new trillian_pb.SignedMapRoot();
        reader.readMessage(
          value,
          trillian_pb.SignedMapRoot.deserializeBinaryFromReader
        );
        msg.setMapRoot(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trillian.GetMapLeavesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trillian.GetMapLeavesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trillian.GetMapLeavesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trillian.GetMapLeavesResponse.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getMapLeafInclusionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.trillian.MapLeafInclusion.serializeBinaryToWriter
    );
  }
  f = message.getMapRoot();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      trillian_pb.SignedMapRoot.serializeBinaryToWriter
    );
  }
};

/**
 * repeated MapLeafInclusion map_leaf_inclusion = 2;
 * @return {!Array.<!proto.trillian.MapLeafInclusion>}
 */
proto.trillian.GetMapLeavesResponse.prototype.getMapLeafInclusionList = function() {
  return /** @type{!Array.<!proto.trillian.MapLeafInclusion>} */ (jspb.Message.getRepeatedWrapperField(
    this,
    proto.trillian.MapLeafInclusion,
    2
  ));
};

/** @param {!Array.<!proto.trillian.MapLeafInclusion>} value */
proto.trillian.GetMapLeavesResponse.prototype.setMapLeafInclusionList = function(
  value
) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};

/**
 * @param {!proto.trillian.MapLeafInclusion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.trillian.MapLeafInclusion}
 */
proto.trillian.GetMapLeavesResponse.prototype.addMapLeafInclusion = function(
  opt_value,
  opt_index
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    2,
    opt_value,
    proto.trillian.MapLeafInclusion,
    opt_index
  );
};

proto.trillian.GetMapLeavesResponse.prototype.clearMapLeafInclusionList = function() {
  this.setMapLeafInclusionList([]);
};

/**
 * optional SignedMapRoot map_root = 3;
 * @return {?proto.trillian.SignedMapRoot}
 */
proto.trillian.GetMapLeavesResponse.prototype.getMapRoot = function() {
  return /** @type{?proto.trillian.SignedMapRoot} */ (jspb.Message.getWrapperField(
    this,
    trillian_pb.SignedMapRoot,
    3
  ));
};

/** @param {?proto.trillian.SignedMapRoot|undefined} value */
proto.trillian.GetMapLeavesResponse.prototype.setMapRoot = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};

proto.trillian.GetMapLeavesResponse.prototype.clearMapRoot = function() {
  this.setMapRoot(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.trillian.GetMapLeavesResponse.prototype.hasMapRoot = function() {
  return jspb.Message.getField(this, 3) != null;
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trillian.SetMapLeavesRequest = function(opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.trillian.SetMapLeavesRequest.repeatedFields_,
    null
  );
};
goog.inherits(proto.trillian.SetMapLeavesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.trillian.SetMapLeavesRequest.displayName =
    "proto.trillian.SetMapLeavesRequest";
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.trillian.SetMapLeavesRequest.repeatedFields_ = [2];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.trillian.SetMapLeavesRequest.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.trillian.SetMapLeavesRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.trillian.SetMapLeavesRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.trillian.SetMapLeavesRequest.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        mapId: jspb.Message.getFieldWithDefault(msg, 1, "0"),
        leavesList: jspb.Message.toObjectList(
          msg.getLeavesList(),
          proto.trillian.MapLeaf.toObject,
          includeInstance
        ),
        metadata: msg.getMetadata_asB64()
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trillian.SetMapLeavesRequest}
 */
proto.trillian.SetMapLeavesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trillian.SetMapLeavesRequest();
  return proto.trillian.SetMapLeavesRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trillian.SetMapLeavesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trillian.SetMapLeavesRequest}
 */
proto.trillian.SetMapLeavesRequest.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readInt64String());
        msg.setMapId(value);
        break;
      case 2:
        var value = new proto.trillian.MapLeaf();
        reader.readMessage(
          value,
          proto.trillian.MapLeaf.deserializeBinaryFromReader
        );
        msg.addLeaves(value);
        break;
      case 5:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.setMetadata(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trillian.SetMapLeavesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trillian.SetMapLeavesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trillian.SetMapLeavesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trillian.SetMapLeavesRequest.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getMapId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(1, f);
  }
  f = message.getLeavesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.trillian.MapLeaf.serializeBinaryToWriter
    );
  }
  f = message.getMetadata_asU8();
  if (f.length > 0) {
    writer.writeBytes(5, f);
  }
};

/**
 * optional int64 map_id = 1;
 * @return {string}
 */
proto.trillian.SetMapLeavesRequest.prototype.getMapId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};

/** @param {string} value */
proto.trillian.SetMapLeavesRequest.prototype.setMapId = function(value) {
  jspb.Message.setField(this, 1, value);
};

/**
 * repeated MapLeaf leaves = 2;
 * @return {!Array.<!proto.trillian.MapLeaf>}
 */
proto.trillian.SetMapLeavesRequest.prototype.getLeavesList = function() {
  return /** @type{!Array.<!proto.trillian.MapLeaf>} */ (jspb.Message.getRepeatedWrapperField(
    this,
    proto.trillian.MapLeaf,
    2
  ));
};

/** @param {!Array.<!proto.trillian.MapLeaf>} value */
proto.trillian.SetMapLeavesRequest.prototype.setLeavesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};

/**
 * @param {!proto.trillian.MapLeaf=} opt_value
 * @param {number=} opt_index
 * @return {!proto.trillian.MapLeaf}
 */
proto.trillian.SetMapLeavesRequest.prototype.addLeaves = function(
  opt_value,
  opt_index
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    2,
    opt_value,
    proto.trillian.MapLeaf,
    opt_index
  );
};

proto.trillian.SetMapLeavesRequest.prototype.clearLeavesList = function() {
  this.setLeavesList([]);
};

/**
 * optional bytes metadata = 5;
 * @return {!(string|Uint8Array)}
 */
proto.trillian.SetMapLeavesRequest.prototype.getMetadata = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(
    this,
    5,
    ""
  ));
};

/**
 * optional bytes metadata = 5;
 * This is a type-conversion wrapper around `getMetadata()`
 * @return {string}
 */
proto.trillian.SetMapLeavesRequest.prototype.getMetadata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(this.getMetadata()));
};

/**
 * optional bytes metadata = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMetadata()`
 * @return {!Uint8Array}
 */
proto.trillian.SetMapLeavesRequest.prototype.getMetadata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
    this.getMetadata()
  ));
};

/** @param {!(string|Uint8Array)} value */
proto.trillian.SetMapLeavesRequest.prototype.setMetadata = function(value) {
  jspb.Message.setField(this, 5, value);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trillian.SetMapLeavesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trillian.SetMapLeavesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.trillian.SetMapLeavesResponse.displayName =
    "proto.trillian.SetMapLeavesResponse";
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.trillian.SetMapLeavesResponse.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.trillian.SetMapLeavesResponse.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.trillian.SetMapLeavesResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.trillian.SetMapLeavesResponse.toObject = function(
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        mapRoot:
          (f = msg.getMapRoot()) &&
          trillian_pb.SignedMapRoot.toObject(includeInstance, f)
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trillian.SetMapLeavesResponse}
 */
proto.trillian.SetMapLeavesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trillian.SetMapLeavesResponse();
  return proto.trillian.SetMapLeavesResponse.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trillian.SetMapLeavesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trillian.SetMapLeavesResponse}
 */
proto.trillian.SetMapLeavesResponse.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 2:
        var value = new trillian_pb.SignedMapRoot();
        reader.readMessage(
          value,
          trillian_pb.SignedMapRoot.deserializeBinaryFromReader
        );
        msg.setMapRoot(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trillian.SetMapLeavesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trillian.SetMapLeavesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trillian.SetMapLeavesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trillian.SetMapLeavesResponse.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getMapRoot();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      trillian_pb.SignedMapRoot.serializeBinaryToWriter
    );
  }
};

/**
 * optional SignedMapRoot map_root = 2;
 * @return {?proto.trillian.SignedMapRoot}
 */
proto.trillian.SetMapLeavesResponse.prototype.getMapRoot = function() {
  return /** @type{?proto.trillian.SignedMapRoot} */ (jspb.Message.getWrapperField(
    this,
    trillian_pb.SignedMapRoot,
    2
  ));
};

/** @param {?proto.trillian.SignedMapRoot|undefined} value */
proto.trillian.SetMapLeavesResponse.prototype.setMapRoot = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};

proto.trillian.SetMapLeavesResponse.prototype.clearMapRoot = function() {
  this.setMapRoot(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.trillian.SetMapLeavesResponse.prototype.hasMapRoot = function() {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trillian.GetSignedMapRootRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trillian.GetSignedMapRootRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.trillian.GetSignedMapRootRequest.displayName =
    "proto.trillian.GetSignedMapRootRequest";
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.trillian.GetSignedMapRootRequest.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.trillian.GetSignedMapRootRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.trillian.GetSignedMapRootRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.trillian.GetSignedMapRootRequest.toObject = function(
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        mapId: jspb.Message.getFieldWithDefault(msg, 1, "0")
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trillian.GetSignedMapRootRequest}
 */
proto.trillian.GetSignedMapRootRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trillian.GetSignedMapRootRequest();
  return proto.trillian.GetSignedMapRootRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trillian.GetSignedMapRootRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trillian.GetSignedMapRootRequest}
 */
proto.trillian.GetSignedMapRootRequest.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readInt64String());
        msg.setMapId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trillian.GetSignedMapRootRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trillian.GetSignedMapRootRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trillian.GetSignedMapRootRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trillian.GetSignedMapRootRequest.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getMapId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(1, f);
  }
};

/**
 * optional int64 map_id = 1;
 * @return {string}
 */
proto.trillian.GetSignedMapRootRequest.prototype.getMapId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};

/** @param {string} value */
proto.trillian.GetSignedMapRootRequest.prototype.setMapId = function(value) {
  jspb.Message.setField(this, 1, value);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trillian.GetSignedMapRootByRevisionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trillian.GetSignedMapRootByRevisionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.trillian.GetSignedMapRootByRevisionRequest.displayName =
    "proto.trillian.GetSignedMapRootByRevisionRequest";
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.trillian.GetSignedMapRootByRevisionRequest.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.trillian.GetSignedMapRootByRevisionRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.trillian.GetSignedMapRootByRevisionRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.trillian.GetSignedMapRootByRevisionRequest.toObject = function(
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        mapId: jspb.Message.getFieldWithDefault(msg, 1, "0"),
        revision: jspb.Message.getFieldWithDefault(msg, 2, "0")
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trillian.GetSignedMapRootByRevisionRequest}
 */
proto.trillian.GetSignedMapRootByRevisionRequest.deserializeBinary = function(
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trillian.GetSignedMapRootByRevisionRequest();
  return proto.trillian.GetSignedMapRootByRevisionRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trillian.GetSignedMapRootByRevisionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trillian.GetSignedMapRootByRevisionRequest}
 */
proto.trillian.GetSignedMapRootByRevisionRequest.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readInt64String());
        msg.setMapId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readInt64String());
        msg.setRevision(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trillian.GetSignedMapRootByRevisionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trillian.GetSignedMapRootByRevisionRequest.serializeBinaryToWriter(
    this,
    writer
  );
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trillian.GetSignedMapRootByRevisionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trillian.GetSignedMapRootByRevisionRequest.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getMapId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(1, f);
  }
  f = message.getRevision();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(2, f);
  }
};

/**
 * optional int64 map_id = 1;
 * @return {string}
 */
proto.trillian.GetSignedMapRootByRevisionRequest.prototype.getMapId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};

/** @param {string} value */
proto.trillian.GetSignedMapRootByRevisionRequest.prototype.setMapId = function(
  value
) {
  jspb.Message.setField(this, 1, value);
};

/**
 * optional int64 revision = 2;
 * @return {string}
 */
proto.trillian.GetSignedMapRootByRevisionRequest.prototype.getRevision = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};

/** @param {string} value */
proto.trillian.GetSignedMapRootByRevisionRequest.prototype.setRevision = function(
  value
) {
  jspb.Message.setField(this, 2, value);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trillian.GetSignedMapRootResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trillian.GetSignedMapRootResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.trillian.GetSignedMapRootResponse.displayName =
    "proto.trillian.GetSignedMapRootResponse";
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.trillian.GetSignedMapRootResponse.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.trillian.GetSignedMapRootResponse.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.trillian.GetSignedMapRootResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.trillian.GetSignedMapRootResponse.toObject = function(
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        mapRoot:
          (f = msg.getMapRoot()) &&
          trillian_pb.SignedMapRoot.toObject(includeInstance, f)
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trillian.GetSignedMapRootResponse}
 */
proto.trillian.GetSignedMapRootResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trillian.GetSignedMapRootResponse();
  return proto.trillian.GetSignedMapRootResponse.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trillian.GetSignedMapRootResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trillian.GetSignedMapRootResponse}
 */
proto.trillian.GetSignedMapRootResponse.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 2:
        var value = new trillian_pb.SignedMapRoot();
        reader.readMessage(
          value,
          trillian_pb.SignedMapRoot.deserializeBinaryFromReader
        );
        msg.setMapRoot(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trillian.GetSignedMapRootResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trillian.GetSignedMapRootResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trillian.GetSignedMapRootResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trillian.GetSignedMapRootResponse.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getMapRoot();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      trillian_pb.SignedMapRoot.serializeBinaryToWriter
    );
  }
};

/**
 * optional SignedMapRoot map_root = 2;
 * @return {?proto.trillian.SignedMapRoot}
 */
proto.trillian.GetSignedMapRootResponse.prototype.getMapRoot = function() {
  return /** @type{?proto.trillian.SignedMapRoot} */ (jspb.Message.getWrapperField(
    this,
    trillian_pb.SignedMapRoot,
    2
  ));
};

/** @param {?proto.trillian.SignedMapRoot|undefined} value */
proto.trillian.GetSignedMapRootResponse.prototype.setMapRoot = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};

proto.trillian.GetSignedMapRootResponse.prototype.clearMapRoot = function() {
  this.setMapRoot(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.trillian.GetSignedMapRootResponse.prototype.hasMapRoot = function() {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trillian.InitMapRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trillian.InitMapRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.trillian.InitMapRequest.displayName = "proto.trillian.InitMapRequest";
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.trillian.InitMapRequest.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.trillian.InitMapRequest.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.trillian.InitMapRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.trillian.InitMapRequest.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        mapId: jspb.Message.getFieldWithDefault(msg, 1, "0")
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trillian.InitMapRequest}
 */
proto.trillian.InitMapRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trillian.InitMapRequest();
  return proto.trillian.InitMapRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trillian.InitMapRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trillian.InitMapRequest}
 */
proto.trillian.InitMapRequest.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readInt64String());
        msg.setMapId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trillian.InitMapRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trillian.InitMapRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trillian.InitMapRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trillian.InitMapRequest.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getMapId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(1, f);
  }
};

/**
 * optional int64 map_id = 1;
 * @return {string}
 */
proto.trillian.InitMapRequest.prototype.getMapId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};

/** @param {string} value */
proto.trillian.InitMapRequest.prototype.setMapId = function(value) {
  jspb.Message.setField(this, 1, value);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trillian.InitMapResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trillian.InitMapResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.trillian.InitMapResponse.displayName = "proto.trillian.InitMapResponse";
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.trillian.InitMapResponse.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.trillian.InitMapResponse.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.trillian.InitMapResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.trillian.InitMapResponse.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        created:
          (f = msg.getCreated()) &&
          trillian_pb.SignedMapRoot.toObject(includeInstance, f)
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trillian.InitMapResponse}
 */
proto.trillian.InitMapResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trillian.InitMapResponse();
  return proto.trillian.InitMapResponse.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trillian.InitMapResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trillian.InitMapResponse}
 */
proto.trillian.InitMapResponse.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new trillian_pb.SignedMapRoot();
        reader.readMessage(
          value,
          trillian_pb.SignedMapRoot.deserializeBinaryFromReader
        );
        msg.setCreated(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trillian.InitMapResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trillian.InitMapResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trillian.InitMapResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trillian.InitMapResponse.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getCreated();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      trillian_pb.SignedMapRoot.serializeBinaryToWriter
    );
  }
};

/**
 * optional SignedMapRoot created = 1;
 * @return {?proto.trillian.SignedMapRoot}
 */
proto.trillian.InitMapResponse.prototype.getCreated = function() {
  return /** @type{?proto.trillian.SignedMapRoot} */ (jspb.Message.getWrapperField(
    this,
    trillian_pb.SignedMapRoot,
    1
  ));
};

/** @param {?proto.trillian.SignedMapRoot|undefined} value */
proto.trillian.InitMapResponse.prototype.setCreated = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};

proto.trillian.InitMapResponse.prototype.clearCreated = function() {
  this.setCreated(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.trillian.InitMapResponse.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 1) != null;
};

goog.object.extend(exports, proto.trillian);
