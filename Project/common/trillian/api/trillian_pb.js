/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require("google-protobuf");
var goog = jspb;
var global = Function("return this")();

var crypto_keyspb_keyspb_pb = require("../crypto/keyspb/keyspb_pb.js");
var crypto_sigpb_sigpb_pb = require("../crypto/sigpb/sigpb_pb.js");
var google_protobuf_any_pb = require("google-protobuf/google/protobuf/any_pb");
var google_protobuf_duration_pb = require("google-protobuf/google/protobuf/duration_pb");
var google_protobuf_timestamp_pb = require("google-protobuf/google/protobuf/timestamp_pb");
goog.exportSymbol("proto.trillian.HashStrategy", null, global);
goog.exportSymbol("proto.trillian.LogRootFormat", null, global);
goog.exportSymbol("proto.trillian.MapRootFormat", null, global);
goog.exportSymbol("proto.trillian.SignedEntryTimestamp", null, global);
goog.exportSymbol("proto.trillian.SignedLogRoot", null, global);
goog.exportSymbol("proto.trillian.SignedMapRoot", null, global);
goog.exportSymbol("proto.trillian.Tree", null, global);
goog.exportSymbol("proto.trillian.TreeState", null, global);
goog.exportSymbol("proto.trillian.TreeType", null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trillian.Tree = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trillian.Tree, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.trillian.Tree.displayName = "proto.trillian.Tree";
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.trillian.Tree.prototype.toObject = function(opt_includeInstance) {
    return proto.trillian.Tree.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.trillian.Tree} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.trillian.Tree.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        treeId: jspb.Message.getFieldWithDefault(msg, 1, "0"),
        treeState: jspb.Message.getFieldWithDefault(msg, 2, 0),
        treeType: jspb.Message.getFieldWithDefault(msg, 3, 0),
        hashStrategy: jspb.Message.getFieldWithDefault(msg, 4, 0),
        hashAlgorithm: jspb.Message.getFieldWithDefault(msg, 5, 0),
        signatureAlgorithm: jspb.Message.getFieldWithDefault(msg, 6, 0),
        displayName: jspb.Message.getFieldWithDefault(msg, 8, ""),
        description: jspb.Message.getFieldWithDefault(msg, 9, ""),
        privateKey:
          (f = msg.getPrivateKey()) &&
          google_protobuf_any_pb.Any.toObject(includeInstance, f),
        storageSettings:
          (f = msg.getStorageSettings()) &&
          google_protobuf_any_pb.Any.toObject(includeInstance, f),
        publicKey:
          (f = msg.getPublicKey()) &&
          crypto_keyspb_keyspb_pb.PublicKey.toObject(includeInstance, f),
        maxRootDuration:
          (f = msg.getMaxRootDuration()) &&
          google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
        createTime:
          (f = msg.getCreateTime()) &&
          google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
        updateTime:
          (f = msg.getUpdateTime()) &&
          google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
        deleted: jspb.Message.getFieldWithDefault(msg, 19, false),
        deleteTime:
          (f = msg.getDeleteTime()) &&
          google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trillian.Tree}
 */
proto.trillian.Tree.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trillian.Tree();
  return proto.trillian.Tree.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trillian.Tree} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trillian.Tree}
 */
proto.trillian.Tree.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readInt64String());
        msg.setTreeId(value);
        break;
      case 2:
        var value = /** @type {!proto.trillian.TreeState} */ (reader.readEnum());
        msg.setTreeState(value);
        break;
      case 3:
        var value = /** @type {!proto.trillian.TreeType} */ (reader.readEnum());
        msg.setTreeType(value);
        break;
      case 4:
        var value = /** @type {!proto.trillian.HashStrategy} */ (reader.readEnum());
        msg.setHashStrategy(value);
        break;
      case 5:
        var value = /** @type {!proto.sigpb.DigitallySigned.HashAlgorithm} */ (reader.readEnum());
        msg.setHashAlgorithm(value);
        break;
      case 6:
        var value = /** @type {!proto.sigpb.DigitallySigned.SignatureAlgorithm} */ (reader.readEnum());
        msg.setSignatureAlgorithm(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.setDisplayName(value);
        break;
      case 9:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      case 12:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(
          value,
          google_protobuf_any_pb.Any.deserializeBinaryFromReader
        );
        msg.setPrivateKey(value);
        break;
      case 13:
        var value = new google_protobuf_any_pb.Any();
        reader.readMessage(
          value,
          google_protobuf_any_pb.Any.deserializeBinaryFromReader
        );
        msg.setStorageSettings(value);
        break;
      case 14:
        var value = new crypto_keyspb_keyspb_pb.PublicKey();
        reader.readMessage(
          value,
          crypto_keyspb_keyspb_pb.PublicKey.deserializeBinaryFromReader
        );
        msg.setPublicKey(value);
        break;
      case 15:
        var value = new google_protobuf_duration_pb.Duration();
        reader.readMessage(
          value,
          google_protobuf_duration_pb.Duration.deserializeBinaryFromReader
        );
        msg.setMaxRootDuration(value);
        break;
      case 16:
        var value = new google_protobuf_timestamp_pb.Timestamp();
        reader.readMessage(
          value,
          google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader
        );
        msg.setCreateTime(value);
        break;
      case 17:
        var value = new google_protobuf_timestamp_pb.Timestamp();
        reader.readMessage(
          value,
          google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader
        );
        msg.setUpdateTime(value);
        break;
      case 19:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setDeleted(value);
        break;
      case 20:
        var value = new google_protobuf_timestamp_pb.Timestamp();
        reader.readMessage(
          value,
          google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader
        );
        msg.setDeleteTime(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trillian.Tree.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trillian.Tree.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trillian.Tree} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trillian.Tree.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTreeId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(1, f);
  }
  f = message.getTreeState();
  if (f !== 0.0) {
    writer.writeEnum(2, f);
  }
  f = message.getTreeType();
  if (f !== 0.0) {
    writer.writeEnum(3, f);
  }
  f = message.getHashStrategy();
  if (f !== 0.0) {
    writer.writeEnum(4, f);
  }
  f = message.getHashAlgorithm();
  if (f !== 0.0) {
    writer.writeEnum(5, f);
  }
  f = message.getSignatureAlgorithm();
  if (f !== 0.0) {
    writer.writeEnum(6, f);
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(8, f);
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(9, f);
  }
  f = message.getPrivateKey();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getStorageSettings();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getPublicKey();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      crypto_keyspb_keyspb_pb.PublicKey.serializeBinaryToWriter
    );
  }
  f = message.getMaxRootDuration();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getCreateTime();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdateTime();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDeleted();
  if (f) {
    writer.writeBool(19, f);
  }
  f = message.getDeleteTime();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};

/**
 * optional int64 tree_id = 1;
 * @return {string}
 */
proto.trillian.Tree.prototype.getTreeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};

/** @param {string} value */
proto.trillian.Tree.prototype.setTreeId = function(value) {
  jspb.Message.setField(this, 1, value);
};

/**
 * optional TreeState tree_state = 2;
 * @return {!proto.trillian.TreeState}
 */
proto.trillian.Tree.prototype.getTreeState = function() {
  return /** @type {!proto.trillian.TreeState} */ (jspb.Message.getFieldWithDefault(
    this,
    2,
    0
  ));
};

/** @param {!proto.trillian.TreeState} value */
proto.trillian.Tree.prototype.setTreeState = function(value) {
  jspb.Message.setField(this, 2, value);
};

/**
 * optional TreeType tree_type = 3;
 * @return {!proto.trillian.TreeType}
 */
proto.trillian.Tree.prototype.getTreeType = function() {
  return /** @type {!proto.trillian.TreeType} */ (jspb.Message.getFieldWithDefault(
    this,
    3,
    0
  ));
};

/** @param {!proto.trillian.TreeType} value */
proto.trillian.Tree.prototype.setTreeType = function(value) {
  jspb.Message.setField(this, 3, value);
};

/**
 * optional HashStrategy hash_strategy = 4;
 * @return {!proto.trillian.HashStrategy}
 */
proto.trillian.Tree.prototype.getHashStrategy = function() {
  return /** @type {!proto.trillian.HashStrategy} */ (jspb.Message.getFieldWithDefault(
    this,
    4,
    0
  ));
};

/** @param {!proto.trillian.HashStrategy} value */
proto.trillian.Tree.prototype.setHashStrategy = function(value) {
  jspb.Message.setField(this, 4, value);
};

/**
 * optional sigpb.DigitallySigned.HashAlgorithm hash_algorithm = 5;
 * @return {!proto.sigpb.DigitallySigned.HashAlgorithm}
 */
proto.trillian.Tree.prototype.getHashAlgorithm = function() {
  return /** @type {!proto.sigpb.DigitallySigned.HashAlgorithm} */ (jspb.Message.getFieldWithDefault(
    this,
    5,
    0
  ));
};

/** @param {!proto.sigpb.DigitallySigned.HashAlgorithm} value */
proto.trillian.Tree.prototype.setHashAlgorithm = function(value) {
  jspb.Message.setField(this, 5, value);
};

/**
 * optional sigpb.DigitallySigned.SignatureAlgorithm signature_algorithm = 6;
 * @return {!proto.sigpb.DigitallySigned.SignatureAlgorithm}
 */
proto.trillian.Tree.prototype.getSignatureAlgorithm = function() {
  return /** @type {!proto.sigpb.DigitallySigned.SignatureAlgorithm} */ (jspb.Message.getFieldWithDefault(
    this,
    6,
    0
  ));
};

/** @param {!proto.sigpb.DigitallySigned.SignatureAlgorithm} value */
proto.trillian.Tree.prototype.setSignatureAlgorithm = function(value) {
  jspb.Message.setField(this, 6, value);
};

/**
 * optional string display_name = 8;
 * @return {string}
 */
proto.trillian.Tree.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};

/** @param {string} value */
proto.trillian.Tree.prototype.setDisplayName = function(value) {
  jspb.Message.setField(this, 8, value);
};

/**
 * optional string description = 9;
 * @return {string}
 */
proto.trillian.Tree.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};

/** @param {string} value */
proto.trillian.Tree.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 9, value);
};

/**
 * optional google.protobuf.Any private_key = 12;
 * @return {?proto.google.protobuf.Any}
 */
proto.trillian.Tree.prototype.getPrivateKey = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_any_pb.Any,
    12
  ));
};

/** @param {?proto.google.protobuf.Any|undefined} value */
proto.trillian.Tree.prototype.setPrivateKey = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};

proto.trillian.Tree.prototype.clearPrivateKey = function() {
  this.setPrivateKey(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.trillian.Tree.prototype.hasPrivateKey = function() {
  return jspb.Message.getField(this, 12) != null;
};

/**
 * optional google.protobuf.Any storage_settings = 13;
 * @return {?proto.google.protobuf.Any}
 */
proto.trillian.Tree.prototype.getStorageSettings = function() {
  return /** @type{?proto.google.protobuf.Any} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_any_pb.Any,
    13
  ));
};

/** @param {?proto.google.protobuf.Any|undefined} value */
proto.trillian.Tree.prototype.setStorageSettings = function(value) {
  jspb.Message.setWrapperField(this, 13, value);
};

proto.trillian.Tree.prototype.clearStorageSettings = function() {
  this.setStorageSettings(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.trillian.Tree.prototype.hasStorageSettings = function() {
  return jspb.Message.getField(this, 13) != null;
};

/**
 * optional keyspb.PublicKey public_key = 14;
 * @return {?proto.keyspb.PublicKey}
 */
proto.trillian.Tree.prototype.getPublicKey = function() {
  return /** @type{?proto.keyspb.PublicKey} */ (jspb.Message.getWrapperField(
    this,
    crypto_keyspb_keyspb_pb.PublicKey,
    14
  ));
};

/** @param {?proto.keyspb.PublicKey|undefined} value */
proto.trillian.Tree.prototype.setPublicKey = function(value) {
  jspb.Message.setWrapperField(this, 14, value);
};

proto.trillian.Tree.prototype.clearPublicKey = function() {
  this.setPublicKey(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.trillian.Tree.prototype.hasPublicKey = function() {
  return jspb.Message.getField(this, 14) != null;
};

/**
 * optional google.protobuf.Duration max_root_duration = 15;
 * @return {?proto.google.protobuf.Duration}
 */
proto.trillian.Tree.prototype.getMaxRootDuration = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_duration_pb.Duration,
    15
  ));
};

/** @param {?proto.google.protobuf.Duration|undefined} value */
proto.trillian.Tree.prototype.setMaxRootDuration = function(value) {
  jspb.Message.setWrapperField(this, 15, value);
};

proto.trillian.Tree.prototype.clearMaxRootDuration = function() {
  this.setMaxRootDuration(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.trillian.Tree.prototype.hasMaxRootDuration = function() {
  return jspb.Message.getField(this, 15) != null;
};

/**
 * optional google.protobuf.Timestamp create_time = 16;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.trillian.Tree.prototype.getCreateTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_timestamp_pb.Timestamp,
    16
  ));
};

/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.trillian.Tree.prototype.setCreateTime = function(value) {
  jspb.Message.setWrapperField(this, 16, value);
};

proto.trillian.Tree.prototype.clearCreateTime = function() {
  this.setCreateTime(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.trillian.Tree.prototype.hasCreateTime = function() {
  return jspb.Message.getField(this, 16) != null;
};

/**
 * optional google.protobuf.Timestamp update_time = 17;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.trillian.Tree.prototype.getUpdateTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_timestamp_pb.Timestamp,
    17
  ));
};

/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.trillian.Tree.prototype.setUpdateTime = function(value) {
  jspb.Message.setWrapperField(this, 17, value);
};

proto.trillian.Tree.prototype.clearUpdateTime = function() {
  this.setUpdateTime(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.trillian.Tree.prototype.hasUpdateTime = function() {
  return jspb.Message.getField(this, 17) != null;
};

/**
 * optional bool deleted = 19;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.trillian.Tree.prototype.getDeleted = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(
    this,
    19,
    false
  ));
};

/** @param {boolean} value */
proto.trillian.Tree.prototype.setDeleted = function(value) {
  jspb.Message.setField(this, 19, value);
};

/**
 * optional google.protobuf.Timestamp delete_time = 20;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.trillian.Tree.prototype.getDeleteTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_timestamp_pb.Timestamp,
    20
  ));
};

/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.trillian.Tree.prototype.setDeleteTime = function(value) {
  jspb.Message.setWrapperField(this, 20, value);
};

proto.trillian.Tree.prototype.clearDeleteTime = function() {
  this.setDeleteTime(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.trillian.Tree.prototype.hasDeleteTime = function() {
  return jspb.Message.getField(this, 20) != null;
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trillian.SignedEntryTimestamp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trillian.SignedEntryTimestamp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.trillian.SignedEntryTimestamp.displayName =
    "proto.trillian.SignedEntryTimestamp";
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.trillian.SignedEntryTimestamp.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.trillian.SignedEntryTimestamp.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.trillian.SignedEntryTimestamp} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.trillian.SignedEntryTimestamp.toObject = function(
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        timestampNanos: jspb.Message.getFieldWithDefault(msg, 1, "0"),
        logId: jspb.Message.getFieldWithDefault(msg, 2, "0"),
        signature:
          (f = msg.getSignature()) &&
          crypto_sigpb_sigpb_pb.DigitallySigned.toObject(includeInstance, f)
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trillian.SignedEntryTimestamp}
 */
proto.trillian.SignedEntryTimestamp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trillian.SignedEntryTimestamp();
  return proto.trillian.SignedEntryTimestamp.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trillian.SignedEntryTimestamp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trillian.SignedEntryTimestamp}
 */
proto.trillian.SignedEntryTimestamp.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readInt64String());
        msg.setTimestampNanos(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readInt64String());
        msg.setLogId(value);
        break;
      case 3:
        var value = new crypto_sigpb_sigpb_pb.DigitallySigned();
        reader.readMessage(
          value,
          crypto_sigpb_sigpb_pb.DigitallySigned.deserializeBinaryFromReader
        );
        msg.setSignature(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trillian.SignedEntryTimestamp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trillian.SignedEntryTimestamp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trillian.SignedEntryTimestamp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trillian.SignedEntryTimestamp.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getTimestampNanos();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(1, f);
  }
  f = message.getLogId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(2, f);
  }
  f = message.getSignature();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      crypto_sigpb_sigpb_pb.DigitallySigned.serializeBinaryToWriter
    );
  }
};

/**
 * optional int64 timestamp_nanos = 1;
 * @return {string}
 */
proto.trillian.SignedEntryTimestamp.prototype.getTimestampNanos = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};

/** @param {string} value */
proto.trillian.SignedEntryTimestamp.prototype.setTimestampNanos = function(
  value
) {
  jspb.Message.setField(this, 1, value);
};

/**
 * optional int64 log_id = 2;
 * @return {string}
 */
proto.trillian.SignedEntryTimestamp.prototype.getLogId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};

/** @param {string} value */
proto.trillian.SignedEntryTimestamp.prototype.setLogId = function(value) {
  jspb.Message.setField(this, 2, value);
};

/**
 * optional sigpb.DigitallySigned signature = 3;
 * @return {?proto.sigpb.DigitallySigned}
 */
proto.trillian.SignedEntryTimestamp.prototype.getSignature = function() {
  return /** @type{?proto.sigpb.DigitallySigned} */ (jspb.Message.getWrapperField(
    this,
    crypto_sigpb_sigpb_pb.DigitallySigned,
    3
  ));
};

/** @param {?proto.sigpb.DigitallySigned|undefined} value */
proto.trillian.SignedEntryTimestamp.prototype.setSignature = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};

proto.trillian.SignedEntryTimestamp.prototype.clearSignature = function() {
  this.setSignature(undefined);
};

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.trillian.SignedEntryTimestamp.prototype.hasSignature = function() {
  return jspb.Message.getField(this, 3) != null;
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trillian.SignedLogRoot = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trillian.SignedLogRoot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.trillian.SignedLogRoot.displayName = "proto.trillian.SignedLogRoot";
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.trillian.SignedLogRoot.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.trillian.SignedLogRoot.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.trillian.SignedLogRoot} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.trillian.SignedLogRoot.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        timestampNanos: jspb.Message.getFieldWithDefault(msg, 1, "0"),
        rootHash: msg.getRootHash_asB64(),
        treeSize: jspb.Message.getFieldWithDefault(msg, 3, "0"),
        treeRevision: jspb.Message.getFieldWithDefault(msg, 6, "0"),
        keyHint: msg.getKeyHint_asB64(),
        logRoot: msg.getLogRoot_asB64(),
        logRootSignature: msg.getLogRootSignature_asB64()
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trillian.SignedLogRoot}
 */
proto.trillian.SignedLogRoot.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trillian.SignedLogRoot();
  return proto.trillian.SignedLogRoot.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trillian.SignedLogRoot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trillian.SignedLogRoot}
 */
proto.trillian.SignedLogRoot.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readInt64String());
        msg.setTimestampNanos(value);
        break;
      case 2:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.setRootHash(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readInt64String());
        msg.setTreeSize(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readInt64String());
        msg.setTreeRevision(value);
        break;
      case 7:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.setKeyHint(value);
        break;
      case 8:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.setLogRoot(value);
        break;
      case 9:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.setLogRootSignature(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trillian.SignedLogRoot.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trillian.SignedLogRoot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trillian.SignedLogRoot} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trillian.SignedLogRoot.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getTimestampNanos();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(1, f);
  }
  f = message.getRootHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(2, f);
  }
  f = message.getTreeSize();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(3, f);
  }
  f = message.getTreeRevision();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(6, f);
  }
  f = message.getKeyHint_asU8();
  if (f.length > 0) {
    writer.writeBytes(7, f);
  }
  f = message.getLogRoot_asU8();
  if (f.length > 0) {
    writer.writeBytes(8, f);
  }
  f = message.getLogRootSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(9, f);
  }
};

/**
 * optional int64 timestamp_nanos = 1;
 * @return {string}
 */
proto.trillian.SignedLogRoot.prototype.getTimestampNanos = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};

/** @param {string} value */
proto.trillian.SignedLogRoot.prototype.setTimestampNanos = function(value) {
  jspb.Message.setField(this, 1, value);
};

/**
 * optional bytes root_hash = 2;
 * @return {!(string|Uint8Array)}
 */
proto.trillian.SignedLogRoot.prototype.getRootHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(
    this,
    2,
    ""
  ));
};

/**
 * optional bytes root_hash = 2;
 * This is a type-conversion wrapper around `getRootHash()`
 * @return {string}
 */
proto.trillian.SignedLogRoot.prototype.getRootHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(this.getRootHash()));
};

/**
 * optional bytes root_hash = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRootHash()`
 * @return {!Uint8Array}
 */
proto.trillian.SignedLogRoot.prototype.getRootHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
    this.getRootHash()
  ));
};

/** @param {!(string|Uint8Array)} value */
proto.trillian.SignedLogRoot.prototype.setRootHash = function(value) {
  jspb.Message.setField(this, 2, value);
};

/**
 * optional int64 tree_size = 3;
 * @return {string}
 */
proto.trillian.SignedLogRoot.prototype.getTreeSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};

/** @param {string} value */
proto.trillian.SignedLogRoot.prototype.setTreeSize = function(value) {
  jspb.Message.setField(this, 3, value);
};

/**
 * optional int64 tree_revision = 6;
 * @return {string}
 */
proto.trillian.SignedLogRoot.prototype.getTreeRevision = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, "0"));
};

/** @param {string} value */
proto.trillian.SignedLogRoot.prototype.setTreeRevision = function(value) {
  jspb.Message.setField(this, 6, value);
};

/**
 * optional bytes key_hint = 7;
 * @return {!(string|Uint8Array)}
 */
proto.trillian.SignedLogRoot.prototype.getKeyHint = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(
    this,
    7,
    ""
  ));
};

/**
 * optional bytes key_hint = 7;
 * This is a type-conversion wrapper around `getKeyHint()`
 * @return {string}
 */
proto.trillian.SignedLogRoot.prototype.getKeyHint_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(this.getKeyHint()));
};

/**
 * optional bytes key_hint = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getKeyHint()`
 * @return {!Uint8Array}
 */
proto.trillian.SignedLogRoot.prototype.getKeyHint_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getKeyHint()));
};

/** @param {!(string|Uint8Array)} value */
proto.trillian.SignedLogRoot.prototype.setKeyHint = function(value) {
  jspb.Message.setField(this, 7, value);
};

/**
 * optional bytes log_root = 8;
 * @return {!(string|Uint8Array)}
 */
proto.trillian.SignedLogRoot.prototype.getLogRoot = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(
    this,
    8,
    ""
  ));
};

/**
 * optional bytes log_root = 8;
 * This is a type-conversion wrapper around `getLogRoot()`
 * @return {string}
 */
proto.trillian.SignedLogRoot.prototype.getLogRoot_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(this.getLogRoot()));
};

/**
 * optional bytes log_root = 8;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getLogRoot()`
 * @return {!Uint8Array}
 */
proto.trillian.SignedLogRoot.prototype.getLogRoot_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getLogRoot()));
};

/** @param {!(string|Uint8Array)} value */
proto.trillian.SignedLogRoot.prototype.setLogRoot = function(value) {
  jspb.Message.setField(this, 8, value);
};

/**
 * optional bytes log_root_signature = 9;
 * @return {!(string|Uint8Array)}
 */
proto.trillian.SignedLogRoot.prototype.getLogRootSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(
    this,
    9,
    ""
  ));
};

/**
 * optional bytes log_root_signature = 9;
 * This is a type-conversion wrapper around `getLogRootSignature()`
 * @return {string}
 */
proto.trillian.SignedLogRoot.prototype.getLogRootSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
    this.getLogRootSignature()
  ));
};

/**
 * optional bytes log_root_signature = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getLogRootSignature()`
 * @return {!Uint8Array}
 */
proto.trillian.SignedLogRoot.prototype.getLogRootSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
    this.getLogRootSignature()
  ));
};

/** @param {!(string|Uint8Array)} value */
proto.trillian.SignedLogRoot.prototype.setLogRootSignature = function(value) {
  jspb.Message.setField(this, 9, value);
};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.trillian.SignedMapRoot = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.trillian.SignedMapRoot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.trillian.SignedMapRoot.displayName = "proto.trillian.SignedMapRoot";
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.trillian.SignedMapRoot.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.trillian.SignedMapRoot.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.trillian.SignedMapRoot} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.trillian.SignedMapRoot.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        mapRoot: msg.getMapRoot_asB64(),
        signature: msg.getSignature_asB64()
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.trillian.SignedMapRoot}
 */
proto.trillian.SignedMapRoot.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.trillian.SignedMapRoot();
  return proto.trillian.SignedMapRoot.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.trillian.SignedMapRoot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.trillian.SignedMapRoot}
 */
proto.trillian.SignedMapRoot.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 9:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.setMapRoot(value);
        break;
      case 4:
        var value = /** @type {!Uint8Array} */ (reader.readBytes());
        msg.setSignature(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.trillian.SignedMapRoot.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.trillian.SignedMapRoot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.trillian.SignedMapRoot} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.trillian.SignedMapRoot.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getMapRoot_asU8();
  if (f.length > 0) {
    writer.writeBytes(9, f);
  }
  f = message.getSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(4, f);
  }
};

/**
 * optional bytes map_root = 9;
 * @return {!(string|Uint8Array)}
 */
proto.trillian.SignedMapRoot.prototype.getMapRoot = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(
    this,
    9,
    ""
  ));
};

/**
 * optional bytes map_root = 9;
 * This is a type-conversion wrapper around `getMapRoot()`
 * @return {string}
 */
proto.trillian.SignedMapRoot.prototype.getMapRoot_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(this.getMapRoot()));
};

/**
 * optional bytes map_root = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMapRoot()`
 * @return {!Uint8Array}
 */
proto.trillian.SignedMapRoot.prototype.getMapRoot_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getMapRoot()));
};

/** @param {!(string|Uint8Array)} value */
proto.trillian.SignedMapRoot.prototype.setMapRoot = function(value) {
  jspb.Message.setField(this, 9, value);
};

/**
 * optional bytes signature = 4;
 * @return {!(string|Uint8Array)}
 */
proto.trillian.SignedMapRoot.prototype.getSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(
    this,
    4,
    ""
  ));
};

/**
 * optional bytes signature = 4;
 * This is a type-conversion wrapper around `getSignature()`
 * @return {string}
 */
proto.trillian.SignedMapRoot.prototype.getSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(this.getSignature()));
};

/**
 * optional bytes signature = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignature()`
 * @return {!Uint8Array}
 */
proto.trillian.SignedMapRoot.prototype.getSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
    this.getSignature()
  ));
};

/** @param {!(string|Uint8Array)} value */
proto.trillian.SignedMapRoot.prototype.setSignature = function(value) {
  jspb.Message.setField(this, 4, value);
};

/**
 * @enum {number}
 */
proto.trillian.LogRootFormat = {
  LOG_ROOT_FORMAT_UNKNOWN: 0,
  LOG_ROOT_FORMAT_V1: 1
};

/**
 * @enum {number}
 */
proto.trillian.MapRootFormat = {
  MAP_ROOT_FORMAT_UNKNOWN: 0,
  MAP_ROOT_FORMAT_V1: 1
};

/**
 * @enum {number}
 */
proto.trillian.HashStrategy = {
  UNKNOWN_HASH_STRATEGY: 0,
  RFC6962_SHA256: 1,
  TEST_MAP_HASHER: 2,
  OBJECT_RFC6962_SHA256: 3,
  CONIKS_SHA512_256: 4
};

/**
 * @enum {number}
 */
proto.trillian.TreeState = {
  UNKNOWN_TREE_STATE: 0,
  ACTIVE: 1,
  FROZEN: 2,
  DEPRECATED_SOFT_DELETED: 3,
  DEPRECATED_HARD_DELETED: 4,
  DRAINING: 5
};

/**
 * @enum {number}
 */
proto.trillian.TreeType = {
  UNKNOWN_TREE_TYPE: 0,
  LOG: 1,
  MAP: 2,
  PREORDERED_LOG: 3
};

goog.object.extend(exports, proto.trillian);
